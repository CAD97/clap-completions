---
source: tests/example_app_completions.rs
expression: test!(sub_subcommands_command)
---
〉help  my-app
Tests completions

Usage:
  > my-app {flags} (file) (choice) 

Subcommands:
  my-app help - Print this message or the help of the given subcommand(s)
  my-app some_cmd - top level subcommand
  my-app some_cmd help - Print this message or the help of the given subcommand(s)
  my-app some_cmd sub_cmd - sub-subcommand
  my-app test - tests things

Flags:
  -h, --help
      Print help information
  -V, --version
      Print version information
  -c, --config
      some config file

Parameters:
  (optional) file <Filepath>: some input file
  (optional) choice <String>: 


〉help my-app test
tests things

Usage:
  > my-app test {flags} 

Flags:
  --case <String>
      the case to test
  -h, --help
      Print help information
  -V, --version
      Print version information


〉help my-app some_cmd
top level subcommand

Usage:
  > my-app some_cmd {flags} 

Subcommands:
  my-app some_cmd help - Print this message or the help of the given subcommand(s)
  my-app some_cmd sub_cmd - sub-subcommand

Flags:
  -h, --help
      Print help information
  -V, --version
      Print version information


〉help my-app some_cmd sub_cmd
sub-subcommand

Usage:
  > my-app some_cmd sub_cmd {flags} 

Flags:
  --config <Custom(String, 440)>
      the other case to test
  -h, --help
      Print help information
  -V, --version
      Print version information


〉help my-app some_cmd help
Print this message or the help of the given subcommand(s)

Usage:
  > my-app some_cmd help (subcommand) 

Parameters:
  (optional) subcommand <String>: The subcommand whose help message to display


〉help my-app help
Print this message or the help of the given subcommand(s)

Usage:
  > my-app help (subcommand) 

Parameters:
  (optional) subcommand <String>: The subcommand whose help message to display



